{"version":3,"sources":["components/Loader/Loader.jsx","components/PostsList/PostsList.jsx","comments/comments.js","components/NewCommentForm/NewCommentForm.jsx","posts/posts.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["Loader","className","PostsList","posts","selectedPost","selectPost","map","elem","key","id","userId","title","type","onClick","postId","BASE_URL","getComments","a","fetch","comments","json","then","result","data","filter","removeComment","commentId","method","comment","addComment","body","JSON","stringify","NewCommentForm","setComments","useState","name","email","formData","setFormData","onSubmit","event","preventDefault","placeholder","value","onChange","target","trimLeft","response","PostDetails","post","setPost","commentsVisibility","setCommentsVisibility","useEffect","getPostDetails","length","deleteComment","App","setPosts","setUserId","setPostId","getUserPosts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7547e044.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\nimport { Loader } from '../Loader/Loader';\n\nexport const PostsList = ({ posts, selectedPost, selectPost }) => {\n  const handleClick = (postId) => {\n    selectedPost === postId ? selectPost(0) : selectPost(postId);\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      {!posts\n        ? <Loader /> : null\n      }\n      <ul className=\"PostsList__list\">\n        {posts.map(elem => (\n          <li\n            className=\"PostsList__item\"\n            key={elem.id}\n          >\n            <div>\n              <b>{`[User #${elem.userId}]: `}</b>\n              {elem.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => handleClick(elem.id)}\n            >\n              {selectedPost === elem.id ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      userId: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  selectedPost: PropTypes.number.isRequired,\n  selectPost: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com/comments';\n\nexport const getComments = async(postId) => {\n  const comments = await fetch(`${BASE_URL}`);\n\n  return comments.json()\n    .then(result => result.data\n      .filter(elem => elem.postId === postId));\n};\n\nexport const removeComment = async(commentId) => {\n  const comment = await fetch(\n    `${BASE_URL}/${commentId}`,\n    { method: 'DELETE' },\n  );\n\n  return comment.json()\n    .then(result => result.data);\n};\n\nexport const addComment = async comment => fetch(BASE_URL, {\n  method: 'POST',\n  body: JSON.stringify(comment),\n});\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport PropTypes from 'prop-types';\nimport { addComment, getComments } from '../../comments/comments';\n\nexport const NewCommentForm = ({ selectedPost, setComments }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    body: '',\n  });\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    formData.postId = selectedPost;\n\n    if (!formData.name || !formData.email || !formData.body) {\n      return;\n    }\n\n    addComment(formData)\n      .then(() => getComments(selectedPost)\n        .then(setComments));\n\n    setFormData({\n      name: '',\n      email: '',\n      body: '',\n    });\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          value={formData.name}\n          className=\"NewCommentForm__input\"\n          onChange={({ target }) => setFormData(data => ({\n            ...data,\n            name: target.value.trimLeft(),\n          }))}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          value={formData.email}\n          className=\"NewCommentForm__input\"\n          onChange={({ target }) => setFormData(data => ({\n            ...data,\n            email: target.value.trimLeft(),\n          }))}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          value={formData.body}\n          className=\"NewCommentForm__input\"\n          onChange={({ target }) => setFormData(data => ({\n            ...data,\n            body: target.value.trimLeft(),\n          }))}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  selectedPost: PropTypes.number.isRequired,\n  setComments: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport async function getUserPosts(userId) {\n  const response = await fetch(`${BASE_URL}/posts`);\n\n  const result = await response.json();\n\n  return userId\n    ? result.data.filter(elem => elem.userId === userId)\n    : result.data;\n}\n\nexport async function getPostDetails(postId) {\n  const response = await fetch(`${BASE_URL}/posts/${+postId}`);\n\n  const result = await response.json();\n\n  return result.data;\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostDetails } from '../../posts/posts';\nimport { removeComment, getComments } from '../../comments/comments';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ selectedPost }) => {\n  const [post, setPost] = useState(null);\n  const [commentsVisibility, setCommentsVisibility] = useState(false);\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    getPostDetails(selectedPost)\n      .then(setPost);\n\n    getComments(selectedPost)\n      .then(setComments);\n  }, [selectedPost]);\n\n  const deleteComment = (id) => {\n    removeComment(id)\n      .then(() => getComments(selectedPost)\n        .then(setComments));\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      {post\n        ? (\n          <>\n            <section className=\"PostDetails__post\">\n              <h2>{post.title}</h2>\n              <p>{post.body}</p>\n            </section>\n\n            <section className=\"PostDetails__comments\">\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => setCommentsVisibility(!commentsVisibility)}\n              >\n                {commentsVisibility\n                  ? `Hide ${comments.length} comments`\n                  : `Show ${comments.length} comments`}\n              </button>\n\n              {commentsVisibility && (\n                <ul className=\"PostDetails__list\">\n                  {comments.map(({ id, email, body }) => (\n                    <li\n                      className=\"PostDetails__list-item\"\n                      key={id}\n                    >\n                      <button\n                        type=\"button\"\n                        className=\"PostDetails__remove-button button\"\n                        onClick={() => deleteComment(id)}\n                      >\n                        X\n                      </button>\n                      <span>{`${email}:`}</span>\n                      <p>{body}</p>\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </section>\n            <section>\n              <div className=\"PostDetails__form-wrapper\">\n                <NewCommentForm\n                  selectedPost={selectedPost}\n                  setComments={setComments}\n                />\n              </div>\n            </section>\n          </>\n        ) : null}\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPost: PropTypes.number.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts } from './posts/posts';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [userId, setUserId] = useState(null);\n  const [postId, setPostId] = useState(null);\n\n  useEffect(() => {\n    getUserPosts(+userId)\n      .then(setPosts);\n  }, [userId]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n          <select\n            className=\"App__user-selector\"\n            onChange={({ target }) => setUserId(target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectedPost={postId}\n            selectPost={setPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails\n            selectedPost={postId}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}